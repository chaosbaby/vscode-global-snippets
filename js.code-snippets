{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Author Information": {
		"scope": "javascript,typescript",
		"prefix": "author",
		"body": [
			"/**",
			" * @author: giscafer ,https://github.com/giscafer",
			" * @date: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
			" * @description: ",
			" */",
			"",
			"$0"
		],
		"description": "Author Information"
	},
	"Print to console": {
		"scope": "javascript,typescript",
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	},
	"JS & TS Stub": {
		"scope": "javascript,typescript",
		"prefix": "stub",
		"body": [
			"/*--------------------------------------------------------------",
			" *  Copyright (c) Nickbing Lao<giscafer@outlook.com>. All rights reserved.",
			" *  Licensed under the MIT License.",
			" *  Github: https://github.com/giscafer ",
			" *-------------------------------------------------------------*/",
			"",
			"$0"
		],
		"description": "Insert Copyright Statement"
	},
	"For_Loop": {
		"prefix": "forof",
		"scope": "javascript,typescript",
		"body": [
			"for (const ${2:item} of ${1:arr}) {",
			"\t$0",
			"}",
		],
		"description": "For of Loop"
	},
	"Taro component": {
		"prefix": "rnc-taro",
		"scope": "javascript,typescript",
		"body": [
			"import Taro, { Component } from '@tarojs/taro';",
			"import { Text, View } from '@tarojs/components';",
			"export default class TemplateComponent extends Component {",
			"  config = {",
			"    navigationBarTitleText: 'TemplateComponent',",
			"    backgroundColor: '#F8F8F8'",
			"  };",
			"  constructor(props) {",
			"    super(props);",
			"    this.state = {",
			"    };",
			"  }",
			"  componentWillMount() { }",
			"  componentWillReact() { }",
			"  componentDidMount() { }",
			"  componentWillUnmount() { }",
			"  componentDidShow() { }",
			"  componentDidHide() { }",
			"  render() {",
			"    return (",
			"      <View>",
			"        <Text> TemplateComponent </Text>",
			"      </View>",
			"    )",
			"  }",
			"}",
		],
		"description": "For of Loop"
	}
}
